---


interface Props {
  title: string;
  subtitle?: string;
  description: string;
  features?: string[];
  ctaText?: string;
  ctaHref?: string;
  image?: string;
  imageAlt?: string;
}

const {
  title,
  subtitle,
  description,
  features = [],
  ctaText = "Get Started",
  ctaHref = "/contact/",
  image,
  imageAlt = title
} = Astro.props;
---

<section class="service-hero">
  <div class="service-hero__container">
    <div class="service-hero__content">
      <div class="service-hero__text">
        {subtitle && (
          <p class="service-hero__subtitle">{subtitle}</p>
        )}
        <h1 class="service-hero__title">{title}</h1>
        <p class="service-hero__description">{description}</p>
        
        {features.length > 0 && (
          <ul class="service-hero__features">
            {features.map((feature) => (
              <li class="service-hero__feature">
                <span class="service-hero__feature-icon">âœ“</span>
                {feature}
              </li>
            ))}
          </ul>
        )}
        
        <div class="service-hero__cta">
          <a href={ctaHref} class="btn service-hero__cta-button">
            {ctaText}
          </a>
        </div>
      </div>
      
      {image && (
        <div class="service-hero__image">
          <img 
            src={image} 
            alt={imageAlt}
            loading="eager"
            decoding="async"
          />
        </div>
      )}
    </div>
  </div>
</section>

<style>
.service-hero {
  padding: 3rem 0;
  background: var(--background-color);
  border-bottom: 1px solid var(--border-color);
}

.service-hero__container {
  max-width: var(--container-width);
  margin: 0 auto;
  padding: 0 1rem;
}

.service-hero__content {
  display: grid;
  gap: 2rem;
  align-items: center;
}

@media (--medium-up) {
  .service-hero__content {
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
  }
}

.service-hero__subtitle {
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--secondary-color);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin: 0 0 0.5rem 0;
}

.service-hero__title {
  font-family: var(--serif-font);
  font-size: var(--text-4xl);
  font-weight: 700;
  line-height: 1.2;
  color: var(--text-color);
  margin: 0 0 1rem 0;
}

@media (--medium-up) {
  .service-hero__title {
    font-size: var(--text-5xl);
  }
}

.service-hero__description {
  font-size: var(--text-lg);
  line-height: var(--line-height);
  color: var(--muted-text-color);
  margin: 0 0 1.5rem 0;
}

.service-hero__features {
  list-style: none;
  padding: 0;
  margin: 0 0 2rem 0;
}

.service-hero__feature {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
  font-size: var(--text-base);
  color: var(--text-color);
}

.service-hero__feature-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 1.25rem;
  height: 1.25rem;
  background: var(--success-color);
  color: white;
  border-radius: 50%;
  font-size: var(--text-xs);
  font-weight: 700;
  flex-shrink: 0;
}

.service-hero__cta {
  margin-top: 2rem;
}

.service-hero__cta-button {
  display: inline-block;
  padding: 1rem 2rem;
  font-size: var(--text-base);
  font-weight: 600;
  text-decoration: none;
  background: var(--button-background-color);
  color: var(--button-text-color);
  border-radius: var(--border-radius);
  transition: var(--global-transition);
}

.service-hero__cta-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px var(--shadow-color);
}

.service-hero__image {
  display: flex;
  justify-content: center;
  align-items: center;
}

.service-hero__image img {
  max-width: 100%;
  height: auto;
  border-radius: var(--border-radius);
  box-shadow: 0 8px 24px var(--shadow-color);
}

@media (--medium-up) {
  .service-hero__image {
    order: 2;
  }
}
</style>